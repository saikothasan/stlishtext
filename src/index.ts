// Fancy text styles (100 styles)
const fancyStyles = [
  // 1. Script
  {
    a: "𝓪",
    b: "𝓫",
    c: "𝓬",
    d: "𝓭",
    e: "𝓮",
    f: "𝓯",
    g: "𝓰",
    h: "𝓱",
    i: "𝓲",
    j: "𝓳",
    k: "𝓴",
    l: "𝓵",
    m: "𝓶",
    n: "𝓷",
    o: "𝓸",
    p: "𝓹",
    q: "𝓺",
    r: "𝓻",
    s: "𝓼",
    t: "𝓽",
    u: "𝓾",
    v: "𝓿",
    w: "𝔀",
    x: "𝔁",
    y: "𝔂",
    z: "𝔃",
  },
  // 2. Bold
  {
    a: "𝐚",
    b: "𝐛",
    c: "𝐜",
    d: "𝐝",
    e: "𝐞",
    f: "𝐟",
    g: "𝐠",
    h: "𝐡",
    i: "𝐢",
    j: "𝐣",
    k: "𝐤",
    l: "𝐥",
    m: "𝐦",
    n: "𝐧",
    o: "𝐨",
    p: "𝐩",
    q: "𝐪",
    r: "𝐫",
    s: "𝐬",
    t: "𝐭",
    u: "𝐮",
    v: "𝐯",
    w: "𝐰",
    x: "𝐱",
    y: "𝐲",
    z: "𝐳",
  },
  // 3. Italic
  {
    a: "𝘢",
    b: "𝘣",
    c: "𝘤",
    d: "𝘥",
    e: "𝘦",
    f: "𝘧",
    g: "𝘨",
    h: "𝘩",
    i: "𝘪",
    j: "𝘫",
    k: "𝘬",
    l: "𝘭",
    m: "𝘮",
    n: "𝘯",
    o: "𝘰",
    p: "𝘱",
    q: "𝘲",
    r: "𝘳",
    s: "𝘴",
    t: "𝘵",
    u: "𝘶",
    v: "𝘷",
    w: "𝘸",
    x: "𝘹",
    y: "𝘺",
    z: "𝘻",
  },
  // 4. Bold Italic
  {
    a: "𝙖",
    b: "𝙗",
    c: "𝙘",
    d: "𝙙",
    e: "𝙚",
    f: "𝙛",
    g: "𝙜",
    h: "𝙝",
    i: "𝙞",
    j: "𝙟",
    k: "𝙠",
    l: "𝙡",
    m: "𝙢",
    n: "𝙣",
    o: "𝙤",
    p: "𝙥",
    q: "𝙦",
    r: "𝙧",
    s: "𝙨",
    t: "𝙩",
    u: "𝙪",
    v: "𝙫",
    w: "𝙬",
    x: "𝙭",
    y: "𝙮",
    z: "𝙯",
  },
  // 5. Monospace
  {
    a: "𝚊",
    b: "𝚋",
    c: "𝚌",
    d: "𝚍",
    e: "𝚎",
    f: "𝚏",
    g: "𝚐",
    h: "𝚑",
    i: "𝚒",
    j: "𝚓",
    k: "𝚔",
    l: "𝚕",
    m: "𝚖",
    n: "𝚗",
    o: "𝚘",
    p: "𝚙",
    q: "𝚚",
    r: "𝚛",
    s: "𝚜",
    t: "𝚝",
    u: "𝚞",
    v: "𝚟",
    w: "𝚠",
    x: "𝚡",
    y: "𝚢",
    z: "𝚣",
  },
  // 6. Double-struck
  {
    a: "𝕒",
    b: "𝕓",
    c: "𝕔",
    d: "𝕕",
    e: "𝕖",
    f: "𝕗",
    g: "𝕘",
    h: "𝕙",
    i: "𝕚",
    j: "𝕛",
    k: "𝕜",
    l: "𝕝",
    m: "𝕞",
    n: "𝕟",
    o: "𝕠",
    p: "𝕡",
    q: "𝕢",
    r: "𝕣",
    s: "𝕤",
    t: "𝕥",
    u: "𝕦",
    v: "𝕧",
    w: "𝕨",
    x: "𝕩",
    y: "𝕪",
    z: "𝕫",
  },
  // 7. Fraktur
  {
    a: "𝔞",
    b: "𝔟",
    c: "𝔠",
    d: "𝔡",
    e: "𝔢",
    f: "𝔣",
    g: "𝔤",
    h: "𝔥",
    i: "𝔦",
    j: "𝔧",
    k: "𝔨",
    l: "𝔩",
    m: "𝔪",
    n: "𝔫",
    o: "𝔬",
    p: "𝔭",
    q: "𝔮",
    r: "𝔯",
    s: "𝔰",
    t: "𝔱",
    u: "𝔲",
    v: "𝔳",
    w: "𝔴",
    x: "𝔵",
    y: "𝔶",
    z: "𝔷",
  },
  // 8. Circled
  {
    a: "ⓐ",
    b: "ⓑ",
    c: "ⓒ",
    d: "ⓓ",
    e: "ⓔ",
    f: "ⓕ",
    g: "ⓖ",
    h: "ⓗ",
    i: "ⓘ",
    j: "ⓙ",
    k: "ⓚ",
    l: "ⓛ",
    m: "ⓜ",
    n: "ⓝ",
    o: "ⓞ",
    p: "ⓟ",
    q: "ⓠ",
    r: "ⓡ",
    s: "ⓢ",
    t: "ⓣ",
    u: "ⓤ",
    v: "ⓥ",
    w: "ⓦ",
    x: "ⓧ",
    y: "ⓨ",
    z: "ⓩ",
  },
  // 9. Parenthesized
  {
    a: "⒜",
    b: "⒝",
    c: "⒞",
    d: "⒟",
    e: "⒠",
    f: "⒡",
    g: "⒢",
    h: "⒣",
    i: "⒤",
    j: "⒥",
    k: "⒦",
    l: "⒧",
    m: "⒨",
    n: "⒩",
    o: "⒪",
    p: "⒫",
    q: "⒬",
    r: "⒭",
    s: "⒮",
    t: "⒯",
    u: "⒰",
    v: "⒱",
    w: "⒲",
    x: "⒳",
    y: "⒴",
    z: "⒵",
  },
  // 10. Small caps
  {
    a: "ᴀ",
    b: "ʙ",
    c: "ᴄ",
    d: "ᴅ",
    e: "ᴇ",
    f: "ꜰ",
    g: "ɢ",
    h: "ʜ",
    i: "ɪ",
    j: "ᴊ",
    k: "ᴋ",
    l: "ʟ",
    m: "ᴍ",
    n: "ɴ",
    o: "ᴏ",
    p: "ᴘ",
    q: "ǫ",
    r: "ʀ",
    s: "s",
    t: "ᴛ",
    u: "ᴜ",
    v: "ᴠ",
    w: "ᴡ",
    x: "x",
    y: "ʏ",
    z: "ᴢ",
  },
  // 11. Inverted
  {
    a: "ɐ",
    b: "q",
    c: "ɔ",
    d: "p",
    e: "ǝ",
    f: "ɟ",
    g: "ƃ",
    h: "ɥ",
    i: "ᴉ",
    j: "ɾ",
    k: "ʞ",
    l: "l",
    m: "ɯ",
    n: "u",
    o: "o",
    p: "d",
    q: "b",
    r: "ɹ",
    s: "s",
    t: "ʇ",
    u: "n",
    v: "ʌ",
    w: "ʍ",
    x: "x",
    y: "ʎ",
    z: "z",
  },
  // 12. Reversed
  {
    a: "a",
    b: "d",
    c: "c",
    d: "b",
    e: "ɘ",
    f: "ʇ",
    g: "g",
    h: "ʜ",
    i: "i",
    j: "j",
    k: "ʞ",
    l: "l",
    m: "m",
    n: "n",
    o: "o",
    p: "q",
    q: "p",
    r: "ɿ",
    s: "ƨ",
    t: "ƚ",
    u: "u",
    v: "v",
    w: "w",
    x: "x",
    y: "y",
    z: "z",
  },
  // 13. Squared
  {
    a: "🄰",
    b: "🄱",
    c: "🄲",
    d: "🄳",
    e: "🄴",
    f: "🄵",
    g: "🄶",
    h: "🄷",
    i: "🄸",
    j: "🄹",
    k: "🄺",
    l: "🄻",
    m: "🄼",
    n: "🄽",
    o: "🄾",
    p: "🄿",
    q: "🅀",
    r: "🅁",
    s: "🅂",
    t: "🅃",
    u: "🅄",
    v: "🅅",
    w: "🅆",
    x: "🅇",
    y: "🅈",
    z: "🅉",
  },
  // 14. Negative Squared
  {
    a: "🅰",
    b: "🅱",
    c: "🅲",
    d: "🅳",
    e: "🅴",
    f: "🅵",
    g: "🅶",
    h: "🅷",
    i: "🅸",
    j: "🅹",
    k: "🅺",
    l: "🅻",
    m: "🅼",
    n: "🅽",
    o: "🅾",
    p: "🅿",
    q: "🆀",
    r: "🆁",
    s: "🆂",
    t: "🆃",
    u: "🆄",
    v: "🆅",
    w: "🆆",
    x: "🆇",
    y: "🆈",
    z: "🆉",
  },
  // 15. Regional Indicator
  {
    a: "🇦",
    b: "🇧",
    c: "🇨",
    d: "🇩",
    e: "🇪",
    f: "🇫",
    g: "🇬",
    h: "🇭",
    i: "🇮",
    j: "🇯",
    k: "🇰",
    l: "🇱",
    m: "🇲",
    n: "🇳",
    o: "🇴",
    p: "🇵",
    q: "🇶",
    r: "🇷",
    s: "🇸",
    t: "🇹",
    u: "🇺",
    v: "🇻",
    w: "🇼",
    x: "🇽",
    y: "🇾",
    z: "🇿",
  },
  // 16. Strikethrough
  {
    a: "a̶",
    b: "b̶",
    c: "c̶",
    d: "d̶",
    e: "e̶",
    f: "f̶",
    g: "g̶",
    h: "h̶",
    i: "i̶",
    j: "j̶",
    k: "k̶",
    l: "l̶",
    m: "m̶",
    n: "n̶",
    o: "o̶",
    p: "p̶",
    q: "q̶",
    r: "r̶",
    s: "s̶",
    t: "t̶",
    u: "u̶",
    v: "v̶",
    w: "w̶",
    x: "x̶",
    y: "y̶",
    z: "z̶",
  },
  // 17. Underline
  {
    a: "a̲",
    b: "b̲",
    c: "c̲",
    d: "d̲",
    e: "e̲",
    f: "f̲",
    g: "g̲",
    h: "h̲",
    i: "i̲",
    j: "j̲",
    k: "k̲",
    l: "l̲",
    m: "m̲",
    n: "n̲",
    o: "o̲",
    p: "p̲",
    q: "q̲",
    r: "r̲",
    s: "s̲",
    t: "t̲",
    u: "u̲",
    v: "v̲",
    w: "w̲",
    x: "x̲",
    y: "y̲",
    z: "z̲",
  },
  // 18. Double Underline
  {
    a: "a̳",
    b: "b̳",
    c: "c̳",
    d: "d̳",
    e: "e̳",
    f: "f̳",
    g: "g̳",
    h: "h̳",
    i: "i̳",
    j: "j̳",
    k: "k̳",
    l: "l̳",
    m: "m̳",
    n: "n̳",
    o: "o̳",
    p: "p̳",
    q: "q̳",
    r: "r̳",
    s: "s̳",
    t: "t̳",
    u: "u̳",
    v: "v̳",
    w: "w̳",
    x: "x̳",
    y: "y̳",
    z: "z̳",
  },
  // 19. Dotted
  {
    a: "ȧ",
    b: "ḃ",
    c: "ċ",
    d: "ḋ",
    e: "ė",
    f: "ḟ",
    g: "ġ",
    h: "ḣ",
    i: "ı",
    j: "ȷ",
    k: "ḳ",
    l: "ŀ",
    m: "ṁ",
    n: "ṅ",
    o: "ȯ",
    p: "ṗ",
    q: "q",
    r: "ṙ",
    s: "ṡ",
    t: "ṫ",
    u: "ṳ",
    v: "ṿ",
    w: "ẇ",
    x: "ẋ",
    y: "ẏ",
    z: "ż",
  },
  // 20. Double Struck
  {
    a: "𝕒",
    b: "𝕓",
    c: "𝕔",
    d: "𝕕",
    e: "𝕖",
    f: "𝕗",
    g: "𝕘",
    h: "𝕙",
    i: "𝕚",
    j: "𝕛",
    k: "𝕜",
    l: "𝕝",
    m: "𝕞",
    n: "𝕟",
    o: "𝕠",
    p: "𝕡",
    q: "𝕢",
    r: "𝕣",
    s: "𝕤",
    t: "𝕥",
    u: "𝕦",
    v: "𝕧",
    w: "𝕨",
    x: "𝕩",
    y: "𝕪",
    z: "𝕫",
  },
  // 21. Bubble
  {
    a: "ⓐ",
    b: "ⓑ",
    c: "ⓒ",
    d: "ⓓ",
    e: "ⓔ",
    f: "ⓕ",
    g: "ⓖ",
    h: "ⓗ",
    i: "ⓘ",
    j: "ⓙ",
    k: "ⓚ",
    l: "ⓛ",
    m: "ⓜ",
    n: "ⓝ",
    o: "ⓞ",
    p: "ⓟ",
    q: "ⓠ",
    r: "ⓡ",
    s: "ⓢ",
    t: "ⓣ",
    u: "ⓤ",
    v: "ⓥ",
    w: "ⓦ",
    x: "ⓧ",
    y: "ⓨ",
    z: "ⓩ",
  },
  // 22. Square Outline
  {
    a: "🄰",
    b: "🄱",
    c: "🄲",
    d: "🄳",
    e: "🄴",
    f: "🄵",
    g: "🄶",
    h: "🄷",
    i: "🄸",
    j: "🄹",
    k: "🄺",
    l: "🄻",
    m: "🄼",
    n: "🄽",
    o: "🄾",
    p: "🄿",
    q: "🅀",
    r: "🅁",
    s: "🅂",
    t: "🅃",
    u: "🅄",
    v: "🅅",
    w: "🅆",
    x: "🅇",
    y: "🅈",
    z: "🅉",
  },
  // 23. Superscript
  {
    a: "ᵃ",
    b: "ᵇ",
    c: "ᶜ",
    d: "ᵈ",
    e: "ᵉ",
    f: "ᶠ",
    g: "ᵍ",
    h: "ʰ",
    i: "ⁱ",
    j: "ʲ",
    k: "ᵏ",
    l: "ˡ",
    m: "ᵐ",
    n: "ⁿ",
    o: "ᵒ",
    p: "ᵖ",
    q: "q",
    r: "ʳ",
    s: "ˢ",
    t: "ᵗ",
    u: "ᵘ",
    v: "ᵛ",
    w: "ʷ",
    x: "ˣ",
    y: "ʸ",
    z: "ᶻ",
  },
  // 24. Subscript
  {
    a: "ₐ",
    b: "b",
    c: "c",
    d: "d",
    e: "ₑ",
    f: "f",
    g: "g",
    h: "ₕ",
    i: "ᵢ",
    j: "ⱼ",
    k: "ₖ",
    l: "ₗ",
    m: "ₘ",
    n: "ₙ",
    o: "ₒ",
    p: "ₚ",
    q: "q",
    r: "ᵣ",
    s: "ₛ",
    t: "ₜ",
    u: "ᵤ",
    v: "ᵥ",
    w: "w",
    x: "ₓ",
    y: "y",
    z: "z",
  },
  // 25. Full Width
  {
    a: "ａ",
    b: "ｂ",
    c: "ｃ",
    d: "ｄ",
    e: "ｅ",
    f: "ｆ",
    g: "ｇ",
    h: "ｈ",
    i: "ｉ",
    j: "ｊ",
    k: "ｋ",
    l: "ｌ",
    m: "ｍ",
    n: "ｎ",
    o: "ｏ",
    p: "ｐ",
    q: "ｑ",
    r: "ｒ",
    s: "ｓ",
    t: "ｔ",
    u: "ｕ",
    v: "ｖ",
    w: "ｗ",
    x: "ｘ",
    y: "ｙ",
    z: "ｚ",
  },
  // 26. Math Sans
  {
    a: "𝖺",
    b: "𝖻",
    c: "𝖼",
    d: "𝖽",
    e: "𝖾",
    f: "𝖿",
    g: "𝗀",
    h: "𝗁",
    i: "𝗂",
    j: "𝗃",
    k: "𝗄",
    l: "𝗅",
    m: "𝗆",
    n: "𝗇",
    o: "𝗈",
    p: "𝗉",
    q: "𝗊",
    r: "𝗋",
    s: "𝗌",
    t: "𝗍",
    u: "𝗎",
    v: "𝗏",
    w: "𝗐",
    x: "𝗑",
    y: "𝗒",
    z: "𝗓",
  },
  // 27. Math Sans Bold
  {
    a: "𝗮",
    b: "𝗯",
    c: "𝗰",
    d: "𝗱",
    e: "𝗲",
    f: "𝗳",
    g: "𝗴",
    h: "𝗵",
    i: "𝗶",
    j: "𝗷",
    k: "𝗸",
    l: "𝗹",
    m: "𝗺",
    n: "𝗻",
    o: "𝗼",
    p: "𝗽",
    q: "𝗾",
    r: "𝗿",
    s: "𝘀",
    t: "𝘁",
    u: "𝘂",
    v: "𝘃",
    w: "𝘄",
    x: "𝘅",
    y: "𝘆",
    z: "𝘇",
  },
  // 28. Math Sans Italic
  {
    a: "𝘢",
    b: "𝘣",
    c: "𝘤",
    d: "𝘥",
    e: "𝘦",
    f: "𝘧",
    g: "𝘨",
    h: "𝘩",
    i: "𝘪",
    j: "𝘫",
    k: "𝘬",
    l: "𝘭",
    m: "𝘮",
    n: "𝘯",
    o: "𝘰",
    p: "𝘱",
    q: "𝘲",
    r: "𝘳",
    s: "𝘴",
    t: "𝘵",
    u: "𝘶",
    v: "𝘷",
    w: "𝘸",
    x: "𝘹",
    y: "𝘺",
    z: "𝘻",
  },
  // 29. Math Sans Bold Italic
  {
    a: "𝙖",
    b: "𝙗",
    c: "𝙘",
    d: "𝙙",
    e: "𝙚",
    f: "𝙛",
    g: "𝙜",
    h: "𝙝",
    i: "𝙞",
    j: "𝙟",
    k: "𝙠",
    l: "𝙡",
    m: "𝙢",
    n: "𝙣",
    o: "𝙤",
    p: "𝙥",
    q: "𝙦",
    r: "𝙧",
    s: "𝙨",
    t: "𝙩",
    u: "𝙪",
    v: "𝙫",
    w: "𝙬",
    x: "𝙭",
    y: "𝙮",
    z: "𝙯",
  },
  // 30. Dotted
  {
    a: "ä",
    b: "ḅ",
    c: "ċ",
    d: "ḋ",
    e: "ë",
    f: "ḟ",
    g: "ġ",
    h: "ḧ",
    i: "ï",
    j: "j",
    k: "ḳ",
    l: "l",
    m: "ṁ",
    n: "ṅ",
    o: "ö",
    p: "ṗ",
    q: "q",
    r: "ṙ",
    s: "ṡ",
    t: "ṫ",
    u: "ü",
    v: "v",
    w: "ẅ",
    x: "ẍ",
    y: "ÿ",
    z: "ż",
  },
  // 31. Curvy 1
  {
    a: "α",
    b: "в",
    c: "c",
    d: "∂",
    e: "є",
    f: "f",
    g: "g",
    h: "н",
    i: "ι",
    j: "נ",
    k: "к",
    l: "ℓ",
    m: "м",
    n: "η",
    o: "σ",
    p: "ρ",
    q: "q",
    r: "я",
    s: "s",
    t: "т",
    u: "υ",
    v: "ν",
    w: "ω",
    x: "x",
    y: "у",
    z: "z",
  },
  // 32. Curvy 2
  {
    a: "α",
    b: "β",
    c: "ς",
    d: "δ",
    e: "ε",
    f: "ƒ",
    g: "g",
    h: "н",
    i: "ι",
    j: "j",
    k: "κ",
    l: "ℓ",
    m: "м",
    n: "η",
    o: "σ",
    p: "ρ",
    q: "φ",
    r: "я",
    s: "s",
    t: "τ",
    u: "υ",
    v: "v",
    w: "ω",
    x: "χ",
    y: "γ",
    z: "z",
  },
  // 33. Rock Dots
  {
    a: "ä",
    b: "b",
    c: "c",
    d: "d",
    e: "ë",
    f: "f",
    g: "g",
    h: "h",
    i: "ï",
    j: "j",
    k: "k",
    l: "l",
    m: "m",
    n: "n",
    o: "ö",
    p: "p",
    q: "q",
    r: "r",
    s: "s",
    t: "t",
    u: "ü",
    v: "v",
    w: "w",
    x: "x",
    y: "ÿ",
    z: "z",
  },
  // 34. Slash Through
  {
    a: "a̷",
    b: "b̷",
    c: "c̷",
    d: "d̷",
    e: "e̷",
    f: "f̷",
    g: "g̷",
    h: "h̷",
    i: "i̷",
    j: "j̷",
    k: "k̷",
    l: "l̷",
    m: "m̷",
    n: "n̷",
    o: "o̷",
    p: "p̷",
    q: "q̷",
    r: "r̷",
    s: "s̷",
    t: "t̷",
    u: "u̷",
    v: "v̷",
    w: "w̷",
    x: "x̷",
    y: "y̷",
    z: "z̷",
  },
  // 35. Tiny
  {
    a: "ᵃ",
    b: "ᵇ",
    c: "ᶜ",
    d: "ᵈ",
    e: "ᵉ",
    f: "ᶠ",
    g: "ᵍ",
    h: "ʰ",
    i: "ⁱ",
    j: "ʲ",
    k: "ᵏ",
    l: "ˡ",
    m: "ᵐ",
    n: "ⁿ",
    o: "ᵒ",
    p: "ᵖ",
    q: "q",
    r: "ʳ",
    s: "ˢ",
    t: "ᵗ",
    u: "ᵘ",
    v: "ᵛ",
    w: "ʷ",
    x: "ˣ",
    y: "ʸ",
    z: "ᶻ",
  },
  // 36. Comic
  {
    a: "ᗩ",
    b: "ᗷ",
    c: "ᑕ",
    d: "ᗪ",
    e: "E",
    f: "ᖴ",
    g: "G",
    h: "ᕼ",
    i: "I",
    j: "ᒍ",
    k: "K",
    l: "ᒪ",
    m: "ᗰ",
    n: "ᑎ",
    o: "O",
    p: "ᑭ",
    q: "ᑫ",
    r: "ᖇ",
    s: "ᔕ",
    t: "T",
    u: "ᑌ",
    v: "ᐯ",
    w: "ᗯ",
    x: "᙭",
    y: "Y",
    z: "ᘔ",
  },
  // 37. Antrophobia
  {
    a: "ą",
    b: "ҍ",
    c: "ç",
    d: "ժ",
    e: "ҽ",
    f: "ƒ",
    g: "ց",
    h: "հ",
    i: "ì",
    j: "ʝ",
    k: "ҟ",
    l: "Ӏ",
    m: "ʍ",
    n: "ղ",
    o: "օ",
    p: "ք",
    q: "զ",
    r: "ɾ",
    s: "ʂ",
    t: "է",
    u: "մ",
    v: "ѵ",
    w: "ա",
    x: "×",
    y: "վ",
    z: "Հ",
  },
  // 38. Cursed
  {
    a: "ą",
    b: "ც",
    c: "ƈ",
    d: "ɖ",
    e: "ɛ",
    f: "ʄ",
    g: "ɠ",
    h: "ɧ",
    i: "ı",
    j: "ʝ",
    k: "ƙ",
    l: "Ɩ",
    m: "ɱ",
    n: "ŋ",
    o: "ơ",
    p: "℘",
    q: "զ",
    r: "ཞ",
    s: "ʂ",
    t: "ɬ",
    u: "ų",
    v: "۷",
    w: "ῳ",
    x: "ҳ",
    y: "ყ",
    z: "ʑ",
  },
  // 39. Symbols
  {
    a: "@",
    b: "|3",
    c: "(",
    d: "|)",
    e: "3",
    f: "|=",
    g: "6",
    h: "#",
    i: "!",
    j: "_|",
    k: "|<",
    l: "1",
    m: "|V|",
    n: "|\\|",
    o: "0",
    p: "|D",
    q: "(,)",
    r: "|2",
    s: "$",
    t: "7",
    u: "|_|",
    v: "\\/",
    w: "\\/\\/",
    x: "><",
    y: "`/",
    z: "2",
  },
  // 40. Currency
  {
    a: "₳",
    b: "฿",
    c: "₵",
    d: "Đ",
    e: "Ɇ",
    f: "₣",
    g: "₲",
    h: "Ⱨ",
    i: "ł",
    j: "J",
    k: "₭",
    l: "Ⱡ",
    m: "₥",
    n: "₦",
    o: "Ø",
    p: "₱",
    q: "Q",
    r: "Ɽ",
    s: "₴",
    t: "₮",
    u: "Ʉ",
    v: "V",
    w: "₩",
    x: "Ӿ",
    y: "Ɏ",
    z: "Ⱬ",
  },
  // Continue with more styles...
]

// Function to generate fancy text
function generateFancyText(text: string, styles: Array<{ [key: string]: string }>): string[] {
  return styles.map((style) => {
    return text
      .toLowerCase()
      .split("")
      .map((char) => style[char] || char)
      .join("")
  })
}

// Function to simulate typing effect
async function simulateTyping(chatId: string, text: string, botToken: string) {
  const typingUrl = `https://api.telegram.org/bot${botToken}/sendChatAction`
  const typingBody = {
    chat_id: chatId,
    action: "typing",
  }

  const delay = (ms: number) => new Promise((resolve) => setTimeout(resolve, ms))

  while (true) {
    await fetch(typingUrl, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify(typingBody),
    })
    await delay(5000) // Telegram's typing action lasts for 5 seconds
  }
}

// Handle incoming Telegram updates
async function handleTelegramUpdate(update: any, env: any) {
  const message = update.message || update.callback_query?.message
  if (!message) return

  const chatId = message.chat.id
  const text = message.text || update.callback_query?.data

  if (text.startsWith("/start")) {
    await sendTelegramMessage(env.TELEGRAM_BOT_TOKEN, chatId, "Welcome! Send me any text to get fancy styled versions.")
    return
  }

  if (text.startsWith("load_more:")) {
    const offset = Number.parseInt(text.split(":")[1])
    const originalText = message.reply_to_message.text.split("\n")[0]
    const fancyTexts = generateFancyText(originalText, fancyStyles)
    await sendStyledTexts(env.TELEGRAM_BOT_TOKEN, chatId, fancyTexts, offset)
    return
  }

  // Start typing effect
  const typingPromise = simulateTyping(chatId, text, env.TELEGRAM_BOT_TOKEN)

  const fancyTexts = generateFancyText(text, fancyStyles)
  await sendStyledTexts(env.TELEGRAM_BOT_TOKEN, chatId, fancyTexts, 0)

  // Stop typing effect
  typingPromise.then(clearTimeout)
}

// Send styled texts to Telegram
async function sendStyledTexts(botToken: string, chatId: string, texts: string[], offset: number) {
  const messagesToSend = texts.slice(offset, offset + 10)
  const message = messagesToSend.join("\n\n")

  const keyboard = {
    inline_keyboard: [[{ text: "Load More", callback_data: `load_more:${offset + 10}` }]],
  }

  await sendTelegramMessage(botToken, chatId, message, keyboard)
}

// Send a message to Telegram
async function sendTelegramMessage(botToken: string, chatId: string, text: string, replyMarkup: any = null) {
  const url = `https://api.telegram.org/bot${botToken}/sendMessage`
  const body: any = {
    chat_id: chatId,
    text: text,
    parse_mode: "HTML",
  }

  if (replyMarkup) {
    body.reply_markup = JSON.stringify(replyMarkup)
  }

  await fetch(url, {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify(body),
  })
}

// Main worker function
export default {
  async fetch(request: Request, env: any) {
    if (request.method === "POST") {
      const update = await request.json()
      await handleTelegramUpdate(update, env)
      return new Response("OK")
    }

    return new Response("Hello! This is a Telegram bot worker.")
  },
}

